// Code generated by goctl. DO NOT EDIT.
// Source: curriculacenter.proto

package curriculacenter

import (
	"context"

	"github.com/MuxiKeStack/muxiK-StackBackend2.0/app/curricula/cmd/rpc/pb/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddCurriculaRequest          = pb.AddCurriculaRequest
	AddCurriculaResponse         = pb.AddCurriculaResponse
	CheckCharacteristicsRequest  = pb.CheckCharacteristicsRequest
	CheckCharacteristicsResponse = pb.CheckCharacteristicsResponse
	CollectCurriculumRequest     = pb.CollectCurriculumRequest
	CollectCurriculumResponse    = pb.CollectCurriculumResponse
	CurriculaInfo                = pb.CurriculaInfo
	CurriculaModel               = pb.CurriculaModel
	CurriculumDetailRequest      = pb.CurriculumDetailRequest
	CurriculumDetailResponse     = pb.CurriculumDetailResponse
	DeleteCollectionRequest      = pb.DeleteCollectionRequest
	DeleteCollectionResponse     = pb.DeleteCollectionResponse
	DeleteCurriculaRequest       = pb.DeleteCurriculaRequest
	DeleteCurriculaResponse      = pb.DeleteCurriculaResponse
	GetAllCollectionRequest      = pb.GetAllCollectionRequest
	GetAllCollectionResponse     = pb.GetAllCollectionResponse
	RandomRequest                = pb.RandomRequest
	RandomResponse               = pb.RandomResponse
	SearchCurriculaRequest       = pb.SearchCurriculaRequest
	SearchCurriculaResponse      = pb.SearchCurriculaResponse
	UpdateCurriculaRequest       = pb.UpdateCurriculaRequest
	UpdateCurriculaResponse      = pb.UpdateCurriculaResponse

	Curriculacenter interface {
		AddCurricula(ctx context.Context, in *AddCurriculaRequest, opts ...grpc.CallOption) (*AddCurriculaResponse, error)
		DeleteCurricula(ctx context.Context, in *DeleteCurriculaRequest, opts ...grpc.CallOption) (*DeleteCurriculaResponse, error)
		UpdateCurricula(ctx context.Context, in *UpdateCurriculaRequest, opts ...grpc.CallOption) (*UpdateCurriculaResponse, error)
		SearchCurricula(ctx context.Context, in *SearchCurriculaRequest, opts ...grpc.CallOption) (*SearchCurriculaResponse, error)
		CurriculumDetail(ctx context.Context, in *CurriculumDetailRequest, opts ...grpc.CallOption) (*CurriculumDetailResponse, error)
		CheckCharacteristics(ctx context.Context, in *CheckCharacteristicsRequest, opts ...grpc.CallOption) (*CheckCharacteristicsResponse, error)
		CollectCurriculum(ctx context.Context, in *CollectCurriculumRequest, opts ...grpc.CallOption) (*CollectCurriculumResponse, error)
		DeleteCollection(ctx context.Context, in *DeleteCollectionRequest, opts ...grpc.CallOption) (*DeleteCollectionResponse, error)
		RandomCurricula(ctx context.Context, in *RandomRequest, opts ...grpc.CallOption) (*RandomResponse, error)
		GetAllCollection(ctx context.Context, in *GetAllCollectionRequest, opts ...grpc.CallOption) (*GetAllCollectionResponse, error)
	}

	defaultCurriculacenter struct {
		cli zrpc.Client
	}
)

func NewCurriculacenter(cli zrpc.Client) Curriculacenter {
	return &defaultCurriculacenter{
		cli: cli,
	}
}

func (m *defaultCurriculacenter) AddCurricula(ctx context.Context, in *AddCurriculaRequest, opts ...grpc.CallOption) (*AddCurriculaResponse, error) {
	client := pb.NewCurriculacenterClient(m.cli.Conn())
	return client.AddCurricula(ctx, in, opts...)
}

func (m *defaultCurriculacenter) DeleteCurricula(ctx context.Context, in *DeleteCurriculaRequest, opts ...grpc.CallOption) (*DeleteCurriculaResponse, error) {
	client := pb.NewCurriculacenterClient(m.cli.Conn())
	return client.DeleteCurricula(ctx, in, opts...)
}

func (m *defaultCurriculacenter) UpdateCurricula(ctx context.Context, in *UpdateCurriculaRequest, opts ...grpc.CallOption) (*UpdateCurriculaResponse, error) {
	client := pb.NewCurriculacenterClient(m.cli.Conn())
	return client.UpdateCurricula(ctx, in, opts...)
}

func (m *defaultCurriculacenter) SearchCurricula(ctx context.Context, in *SearchCurriculaRequest, opts ...grpc.CallOption) (*SearchCurriculaResponse, error) {
	client := pb.NewCurriculacenterClient(m.cli.Conn())
	return client.SearchCurricula(ctx, in, opts...)
}

func (m *defaultCurriculacenter) CurriculumDetail(ctx context.Context, in *CurriculumDetailRequest, opts ...grpc.CallOption) (*CurriculumDetailResponse, error) {
	client := pb.NewCurriculacenterClient(m.cli.Conn())
	return client.CurriculumDetail(ctx, in, opts...)
}

func (m *defaultCurriculacenter) CheckCharacteristics(ctx context.Context, in *CheckCharacteristicsRequest, opts ...grpc.CallOption) (*CheckCharacteristicsResponse, error) {
	client := pb.NewCurriculacenterClient(m.cli.Conn())
	return client.CheckCharacteristics(ctx, in, opts...)
}

func (m *defaultCurriculacenter) CollectCurriculum(ctx context.Context, in *CollectCurriculumRequest, opts ...grpc.CallOption) (*CollectCurriculumResponse, error) {
	client := pb.NewCurriculacenterClient(m.cli.Conn())
	return client.CollectCurriculum(ctx, in, opts...)
}

func (m *defaultCurriculacenter) DeleteCollection(ctx context.Context, in *DeleteCollectionRequest, opts ...grpc.CallOption) (*DeleteCollectionResponse, error) {
	client := pb.NewCurriculacenterClient(m.cli.Conn())
	return client.DeleteCollection(ctx, in, opts...)
}

func (m *defaultCurriculacenter) RandomCurricula(ctx context.Context, in *RandomRequest, opts ...grpc.CallOption) (*RandomResponse, error) {
	client := pb.NewCurriculacenterClient(m.cli.Conn())
	return client.RandomCurricula(ctx, in, opts...)
}

func (m *defaultCurriculacenter) GetAllCollection(ctx context.Context, in *GetAllCollectionRequest, opts ...grpc.CallOption) (*GetAllCollectionResponse, error) {
	client := pb.NewCurriculacenterClient(m.cli.Conn())
	return client.GetAllCollection(ctx, in, opts...)
}
